# nginx.conf - Production-ready configuration
# Handles 10K+ RPS with security hardening

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=admin:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream backend
    upstream antispam_backend {
        server antispam-bot:8080 max_fails=3 fail_timeout=30s weight=1;
        # Add more servers for horizontal scaling:
        # server antispam-bot-2:8080 max_fails=3 fail_timeout=30s weight=1;
        
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name api.antispam.local _;  # Replace with your domain

        # Basic security
        client_max_body_size 1M;
        client_body_timeout 10s;
        client_header_timeout 10s;
        client_body_buffer_size 16k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 4k;

        # Connection limits
        limit_conn conn_limit_per_ip 20;

        # API endpoints with standard rate limiting
        location /api/v1/detect {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://antispam_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        }

        # Auth endpoints with stricter limits
        location /api/v1/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://antispam_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }

        # Admin endpoints with very strict limits
        location /api/v1/admin/ {
            limit_req zone=admin burst=5 nodelay;
            
            # Optional: IP whitelist for admin
            # allow 192.168.1.0/24;
            # allow 10.0.0.0/8;
            # deny all;
            
            proxy_pass http://antispam_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Info and docs endpoints (public, light rate limiting)
        location ~ ^/api/v1/(info|docs|openapi\.json) {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://antispam_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static content
            proxy_cache_valid 200 5m;
        }

        # Health check (no rate limit, internal only)
        location /health {
            proxy_pass http://antispam_backend;
            access_log off;
            
            # Only allow from internal networks
            allow 172.16.0.0/12;
            allow 10.0.0.0/8;
            allow 192.168.0.0/16;
            deny all;
        }

        # Metrics endpoint (restricted access)
        location /metrics {
            proxy_pass http://localhost:9090;
            access_log off;
            
            # Only allow from monitoring systems
            allow 172.16.0.0/12;
            allow 10.0.0.0/8;
            deny all;
        }

        # Block common attack patterns
        location ~ /\. {
            deny all;
            access_log off;
        }

        location ~ ^/(wp-|admin|phpmyadmin|mysql) {
            deny all;
            access_log off;
        }

        # Default API route
        location /api/ {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://antispam_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Root redirect
        location = / {
            return 301 /api/v1/docs;
        }

        # Custom error pages
        error_page 429 /rate_limit.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /rate_limit.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # HTTP to HTTPS redirect (for production with SSL)
    # server {
    #     listen 80;
    #     server_name api.antispam.yourcompany.com;
    #     return 301 https://$server_name$request_uri;
    # }

    # HTTPS configuration (uncomment for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name api.antispam.yourcompany.com;
    #     
    #     ssl_certificate /etc/ssl/certs/antispam.crt;
    #     ssl_certificate_key /etc/ssl/private/antispam.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # ... same location blocks as above ...
    # }
}