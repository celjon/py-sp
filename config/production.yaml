# config/production.yaml - Production конфигурация (БЕЗ эвристик и ML)
database:
  url: "${DATABASE_URL}"
  pool_size: 20

redis:
  url: "${REDIS_URL}"

telegram:
  token: "${BOT_TOKEN}"
  admin_chat_id: "${ADMIN_CHAT_ID}"
  admin_users: ${ADMIN_USERS}

# Строгие настройки для production (БЕЗ устаревших heuristic и ml)
spam_detection:
  ensemble:
    spam_threshold: 0.7          # Выше порог для production
    high_confidence_threshold: 0.85
    auto_ban_threshold: 0.9      # Очень высокий порог автобана
    max_processing_time: 1.5     # Быстрее обработка
    enable_early_exit: true
    
    # RUSpam настройки
    use_ruspam: true
    ruspam_min_length: 15        # Длиннее тексты для анализа
    russian_threshold: 0.4       # Строже определение русского
    
    # OpenAI настройки
    openai_min_length: 10        # Длиннее тексты для LLM
    use_openai_fallback: true
    openai_timeout: 3.0          # Меньше таймаут

# RUSpam production
ruspam:
  model_name: "RUSpam/spamNS_v1"
  min_confidence: 0.7            # Выше минимальная уверенность
  cache_results: true
  cache_ttl: 1800               # 30 минут

# OpenAI production
openai:
  api_key: "${OPENAI_API_KEY}"
  model: "gpt-4o-mini"
  max_tokens: 100               # Меньше токенов = быстрее
  temperature: 0.0
  enabled: true

# Внешние API production
external_apis:
  cas:
    api_url: "https://api.cas.chat/check"
    timeout: 3                  # Быстрее таймаут
    cache_ttl: 7200            # 2 часа кэш
    retry_attempts: 1          # Меньше попыток

# Строгая модерация
moderation:
  auto_ban_threshold: 0.95      # Очень высокий порог
  auto_restrict_threshold: 0.8
  delete_recent_messages: true
  recent_messages_hours: 2      # Удаляем за 2 часа
  aggressive_cleanup: true

# Production логирование
logging:
  level: "WARNING"             # Только важные сообщения
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/antispam-bot-prod.log"
  structured: true            # Структурированные логи

# HTTP Server production
http_server:
  enabled: true
  host: "0.0.0.0"
  port: 8080
  workers: 4                  # Больше воркеров
  cors_enabled: false         # Отключаем CORS в production
  cors_origins: []

# API production
api:
  rate_limit:
    default_requests_per_minute: 30  # Строже лимиты
    default_requests_per_day: 2000
    burst_limit: 5
  
  auth:
    jwt_secret: "${JWT_SECRET}"
    jwt_algorithm: "HS256"
    access_token_expire_minutes: 15   # Короче сессии
    refresh_token_expire_days: 3
  
  features:
    batch_detection: true
    usage_analytics: true
    webhook_support: true            # Включаем webhook в production

# Метрики production
metrics:
  enabled: true
  prometheus_port: 9090
  collect_detailed: false      # Меньше детальных метрик

# Производительность production
performance:
  max_concurrent_checks: 20    # Больше конкурентных проверок
  detection_timeout: 1.5       # Быстрее таймаут
  cache_detection_results: 600 # 10 минут кэш
  rate_limit_per_user: 10      # Строже лимиты пользователей

# Production безопасность
security:
  enable_ip_whitelist: true
  allowed_ips: ["${ALLOWED_IPS}"]
  enable_request_signing: true
  max_request_size: 1048576    # 1MB
  enable_ddos_protection: true